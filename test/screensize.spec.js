// Generated by Selenium IDE
const { Builder, By, Key, until } = require('selenium-webdriver')
const assert = require('assert')
const TEXTS_TO_CHECK = ['Cart', 'Hot']

describe('screen size', function() {
  this.timeout(30000)
  let driver
  let vars
  beforeEach(async function() {
    driver = await new Builder().forBrowser('chrome').build()
    vars = {}
    await driver.get("http://localhost:3000/en")
  })
  afterEach(async function() {
    await driver.quit();
  })
  it('desktop', async function() {
    const DESKTOP_RESOLUTIONS = [
      { width: 1920, height: 1080 },
      { width: 1366, height: 768 },
      { width: 1280, height: 720 },
      { width: 1536, height: 864 }
    ]
    for(resolution of DESKTOP_RESOLUTIONS){
      await testVisible(resolution, TEXTS_TO_CHECK);
    }
    
  })

  it('mobile', async function() {
    const MOBILE_RESOLUTIONS = [
      { width: 360, height: 800 },
      { width: 390, height: 844 },
      { width: 412, height: 915 },
      { width: 393, height: 873 }
    ]
    for(resolution of MOBILE_RESOLUTIONS){
      await testVisible(resolution, TEXTS_TO_CHECK);
    }
  })

  it('tablet', async function() {
    const TABLET_RESOLUTIONS = [
      { width: 601, height: 962 },
      { width: 390, height: 844 },
      { width: 412, height: 915 },
      { width: 393, height: 873 }
    ]
    for(resolution of TABLET_RESOLUTIONS){
      await testVisible(resolution, TEXTS_TO_CHECK);
    }

  })

  async function testVisible (resolution, texts){
    await driver.manage().window().setRect(resolution)
    {
      for (const text of texts) {
        const element = await driver.findElement(By.xpath(`//*[text()='${text}']`))
        assert(element.isDisplayed())
      }
    }
  }
})
